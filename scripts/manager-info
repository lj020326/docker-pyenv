#! /bin/sh

set -e
here=$(readlink -f "$0" | xargs dirname)
name=$(readlink -f "$0" | xargs basename)


_info_os_name() {
    echo $(grep ^NAME /etc/os-release | cut -d= -f 2 | sed -r 's/^"|"$//g')
}


_info_os_version() {
    echo $(grep ^VERSION_ID /etc/os-release | cut -d= -f 2 | sed -r 's/^"|"$//g')
}


_info_os_package_manager() {
    case "$(_info_os_name)" in
        Ubuntu)
            echo apt-get
        ;;
        CentOS|RedHat)
            echo yum
        ;;
        openSUSE*|SLES)
            echo zypper
        ;;
        *)
            echo "Unknown operating system '$(_info_os_name)'"
            exit 1
        ;;
    esac
}


_info_hdf4() {
    case "$(_info_os_name)" in
        Ubuntu)
            echo "libhdf4-0 libhdf4-dev"
        ;;
        CentOS|RedHat)
            echo "hdf hdf-devel"
        ;;
        *)
            echo "Unknown operating system '$(_info_os_name)'"
            exit 1
        ;;
    esac
}


_info_hdf5() {
    case "$(_info_os_name)" in
        Ubuntu)
            echo "libhdf5-103 libhdf5-dev"
        ;;
        CentOS|RedHat)
            echo "hdf5 hdf5-devel"
        ;;
        *)
            echo "Unknown operating system '$(_info_os_name)'"
            exit 1
        ;;
    esac
}


_info_blas() {
    case "$(_info_os_name)" in
        Ubuntu)
            echo "libblas3 libblas-dev"
        ;;
        CentOS|RedHat)
            echo "blas blas-devel"
        ;;
        *)
            echo "Unknown operating system '$(_info_os_name)'"
            exit 1
        ;;
    esac
}


_info_lapack() {
    case "$(_info_os_name)" in
        Ubuntu)
            echo "liblapack3 liblapack-dev"
        ;;
        CentOS|RedHat)
            echo "lapack lapack-devel"
        ;;
        *)
            echo "Unknown operating system '$(_info_os_name)'"
            exit 1
        ;;
    esac
}


_info_netcdf4() {
    case "$(_info_os_name)" in
        Ubuntu)
            echo "libnetcdf15 libnetcdf-dev"
        ;;
        CentOS|RedHat)
            echo "netcdf netcdf-devel"
        ;;
        *)
            echo "Unknown operating system '$(_info_os_name)'"
            exit 1
        ;;
    esac
}


_info_openssl_root() {
    version=1.1.1k
    if [ ! -z "$1" ]; then
        version="$1"
    fi
    regex="1\.(0\.2[a-u]?|1\.1[a-k]?)"
    if [ -z $(echo "${version}" | grep -E "^${regex}$" || true) ]; then
        echo "Invalid openssl version '$1'"
        exit 1
    fi
    version_short=$(echo ${version} | sed -r 's|(([0-9]\.)+[0-9])[a-z]?|\1|g')
    echo /opt/openssl-${version_short}
}


_info_pyenv_dev() {
    case "$(_info_os_name)" in
        Ubuntu)
            echo "
                build-essential llvm libssl-dev tk-dev                    \
                libncursesw5-dev libreadline-dev libsqlite3-dev               \
                libffi-dev xz-utils zlib1g-dev libbz2-dev liblzma-dev
            " | xargs
        ;;
        CentOS|RedHat)
            echo "
                @development findutils llvm openssl-devel                 \
                readline-devel sqlite sqlite-devel                            \
                libffi-devel xz xz-devel bzip2 bzip2-devel zlib-devel
            " | xargs
        ;;
        *)
            echo "Unknown operating system '$(_info_os_name)'"
            exit 1
        ;;
    esac
}


_info_pyenv_root() {
    echo /usr/local/share/pyenv
}


# Parse arguments.
# if [ $# -ne 1 ]; then
#     echo "E: The ${name} command takes one argument"
#     exit 1
# fi
case "$1" in
    blas|lapack|hdf4|hdf5|netcdf4)
        _info_$(echo $1 | tr - _)
    ;;
    openssl-root)
        shift
        _info_openssl_root $@
    ;;
    os-name|os-version|os-package-manager)
        _info_$(echo $1 | tr - _)
    ;;
    pyenv-dev|pyenv-root)
        _info_$(echo $1 | tr - _)
    ;;
    *)
        echo "Unknown option '$1'"
        exit 1
    ;;
esac
